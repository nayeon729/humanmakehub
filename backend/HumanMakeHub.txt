# HumanMakeHub 플랫폼 기획서 (v2.6)

## 1. 플랫폼 개요
- **이름**: HumanMakeHub
- **목표**: PM 중심 수작업 프로젝트 분배 + 웹에이전시 + 창업 정보 제공 플랫폼
- **대상**: 프리랜서, 예비 창업가, 스타트업, 외주 의뢰 클라이언트

---

## 2. 주요 운영 흐름 (PM 중심 구조)
1. **클라이언트**가 프로젝트 의뢰
2. **운영자**가 PM을 직접 지정하거나 자동 추천 기능 사용
3. **PM**이 팀원 구성 및 작업 수동 또는 자동 배정 (최종 선택은 수동 확정)
4. 팀원이 작업 수행 후 PM에게 보고
5. **PM → 클라이언트** 최종 전달
6. 프로젝트 종료 → 리뷰 및 정산 → 만족도 평가 및 후기 작성

※ 운영 자동화:
- 프로젝트 유형, 분야, 예산 등을 기준으로 **PM 자동 추천 기능** 탑재 (단, PM이 수동 선택 가능)
- 팀원 구성 시 태그 기반 **자동 추천 기능 + 수동 선택 기능 병행 제공**
- 작업 완료 시 시스템이 자동으로 프로젝트 단계 전이 (ex. 디자인 완료 → 개발 단계 시작)

---

## 3. 핵심 기능 구성

### 3.1 클라이언트 기능
- 프로젝트 등록 (제목, 설명, 마감일, 예산 등)
- 첨부파일 업로드 (기획서, 참고자료)
- 클라이언트 대시보드: 진행 현황 확인 / 메시지 수신 / 완료 확인
- 프로젝트 종료 후 리뷰 및 별점 평가 기능 포함

### 3.2 PM 기능
- 운영자 승인 후 PM 권한 부여
- 프로젝트 요청 수락 또는 자동 배정 받기
- 인재 탐색 후 팀 구성 (추천 필터: 분야, 경력, 평점)
- 팀원 초대 / 승인 / 역할 지정 (기획, 디자인, 프론트엔드, 백엔드 등)
- 각 역할별 작업(Task) 생성 및 수동/자동 배정 (최종 배정은 수동 선택 가능)
- 작업 완료 보고 → 피드백 → 승인 또는 재요청

### 3.3 팀원 기능
- 배정된 작업 확인 및 완료 보고
- 파일 제출 / 피드백 대응
- 수익 내역 확인 / 리뷰 작성
- 본인 포트폴리오 페이지 자동 생성 (완료한 작업 기반)
- [기술스택 등록 및 수정] 기능 제공 (프로필 설정 시 선택 또는 마이페이지에서 편집 가능)

### 3.4 실시간 협업 기능
- 프로젝트 전용 채팅방 생성 (WebSocket 기반)
- 1:1 다이렉트 메시지
- 파일 공유 / 피드백 주고받기
- 일정관리 (업무 단계 관리, 데드라인 설정)
- 알림 기능 (이메일/푸시)
- Notion 연동 / 문서 관리

### 3.5 정산 및 수익 관리
- 예산 분배: PM이 역할별로 수동 또는 자동 분배 설정
- 작업 완료 후 승인 요청 → 운영자가 지급 승인
- 수익 내역 자동 리포트화 (PDF 다운로드 포함)

### 3.6 작업 알림 시스템
- 이메일/웹 푸시 알림
- 사용자별 수신 설정 가능
- 마감 임박 일정 리마인더 자동 발송

### 3.7 협업 툴 연동 (Notion)
- 프로젝트 생성 시 자동 문서 링크 발급
- Notion API 연동을 통한 상태 동기화

### 3.8 메신저 기능
- 프로젝트별 채팅방, 1:1 다이렉트 메시지
- 읽음 확인, 파일 첨부, 이모지 반응
- 사용자 신고/차단 기능 포함

### 3.9 운영자 기능
- 전체 프로젝트 / 회원 / 정산 관리 대시보드
- PM 지정/해제, 프로젝트 승인/거절, 지급 확인
- 팀원 활동 이력 조회 및 계정 제한 관리
- 역할 전환 이력 로그 및 접근 제어 관리
- 추천 알고리즘 설정값 조정 및 승인 기능

---

## 4. 사용자 권한 및 역할

| 역할        | 주요 기능 요약                                                                 |
|-------------|----------------------------------------------------------------------------------|
| 운영자       | 전체 시스템 관리, PM 지정, 프로젝트 승인, 지급 확인, 신고/정지 처리 등              |
| 클라이언트    | 프로젝트 의뢰, 파일 업로드, 현황 확인, 검수 완료 처리, 리뷰 작성                    |
| PM (팀장)    | 팀원 구성, 작업 배정, 일정 관리, 클라이언트와의 커뮤니케이션, 팀원 평가               |
| Member(팀원) | 배정된 작업 수행, 완료 보고, 실시간 커뮤니케이션 참여, 포트폴리오 자동 기록          |

### 🔁 역할 부여 흐름
- 모든 사용자는 최초 가입 시 `user` 권한
- 운영자가 PM 신청자 심사 후 `PM` 권한 부여
- PM이 팀원을 초대하면, 초대 수락 시 자동 `Member` 권한 전환
- 운영자는 모든 역할 전환 이력을 조회 및 수정 가능

---

## 5. 기술 스택

### 프론트엔드
- React + TailwindCSS + MUI
- Redux Toolkit / React Query

### 백엔드
- FastAPI + MySQL (SQLAlchemy)
- JWT 인증 / APScheduler / WebSocket

### 인프라
- AWS / Railway + Docker + Nginx
- 파일 스토리지: AWS S3 / Cloudflare R2

---

## 6. 창업지원센터 기능 구성

### 6.1 창업 콘텐츠 제공
- 창업 지원 사업 소개: 정부지원사업, 창업 아이템 발굴 등 큐레이션
- 창업 정보 게시판: 공공 데이터 크롤링 기반 실시간 게시
- 전문가 상담: 실시간 혹은 예약 상담 시스템 (캘린더 연동)
- 창업 서식 자료실: IR, 사업계획서, 제안서 템플릿 다운로드 기능
- IR 자동 생성기: 입력 정보 기반 자동 작성 기능 (구성 항목별 템플릿 적용)

---

## 7. 주요 DB 테이블

| 테이블명         | 설명                                                   |
|------------------|--------------------------------------------------------|
| `users`          | 사용자 정보, 권한, PM 여부                             |
| `projects`       | 클라이언트 프로젝트 정보                               |
| `project_teams`  | 프로젝트별 PM 및 팀원 구성                             |
| `tasks`          | 작업 항목 (담당자, 상태 등)                            |
| `messages`       | 채팅 메시지 / 1:1 메시지 기록                          |
| `project_phases` | 프로젝트 단계별 일정 및 상태 관리                      |
| `earnings`       | 수익 분배 및 지급 내역                                 |
| `startup_resources` | 창업 콘텐츠 및 템플릿                                 |
| `notifications`  | 알림 설정 및 기록 테이블                               |
| `reports`        | 신고/제재 관리 테이블 (보안/윤리 기능 반영)            |
| `reviews`        | 프로젝트 후기 및 별점 저장                             |
| `tech_stacks`    | 사용자 기술스택 정보 (user_id, skill_tag 등으로 구성)   |

---

## 8. 기능 및 DB 구조 상 호환성 검토

- 역할 기반 권한, 프로젝트 중심 구조, 메시징, 정산, 알림 등은 테이블 간 참조 구조로 자연스럽게 매핑됨
- 알림(`notifications`)은 다양한 이벤트에 확장 가능하므로 `event_type` 필드 다중 지원 고려
- 메신저 기능은 실시간성과 보존성을 고려하여 socket 기반 통신 구조와 DB 로그 병행 운영
- 정산 구조(`earnings`)는 프로젝트-참여자-단계 기준으로 다대다 관계로 설계
- 리뷰/별점(`reviews`)은 프로젝트 완료 후 활성화되며, 팀원/PM 평가와 연동 가능
- 기술스택(`tech_stacks`)은 사용자 프로필 작성 시 직접 입력 또는 선택한 정보를 기준으로 구성되며, 추천 기능과 연동됨

→ 현재 기획 기반으로 MVP부터 실제 운영까지 무리 없는 구조로 판단되며, 자동화·보안·후기 시스템 보강을 통해 신뢰도 높은 플랫폼 운영 가능

